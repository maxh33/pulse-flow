name: Deploy to Production

on:
  push:
    branches:
      - feat/cloud-deployment

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create environment file
        run: |
          cat << EOF > .env
          PORT=3000
          NODE_ENV=production
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          KAFKA_BROKERS=${{ secrets.KAFKA_BROKERS }}
          KAFKA_CLIENT_CERT=${{ secrets.KAFKA_CLIENT_CERT }}
          KAFKA_CLIENT_CERT_KEY=${{ secrets.KAFKA_CLIENT_CERT_KEY }}
          KAFKA_TRUSTED_CERT=${{ secrets.KAFKA_TRUSTED_CERT }}
          KAFKA_PREFIX=${{ secrets.KAFKA_PREFIX }}
          GRAFANA_CLOUD_URL=${{ secrets.GRAFANA_CLOUD_URL }}
          GRAFANA_API_KEY=${{ secrets.GRAFANA_API_KEY }}
          EOF

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.prod.yml up -d
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          KAFKA_BROKERS: ${{ secrets.KAFKA_BROKERS }}
          KAFKA_CLIENT_CERT: ${{ secrets.KAFKA_CLIENT_CERT }}
          KAFKA_CLIENT_CERT_KEY: ${{ secrets.KAFKA_CLIENT_CERT_KEY }}
          KAFKA_TRUSTED_CERT: ${{ secrets.KAFKA_TRUSTED_CERT }}
          KAFKA_PREFIX: ${{ secrets.KAFKA_PREFIX }}
          GRAFANA_CLOUD_URL: ${{ secrets.GRAFANA_CLOUD_URL }}
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}