version: '3.8'

services:
  app:
    networks:
      - app_network
    container_name: pulse-flow-app
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    image: ghcr.io/${GITHUB_REPOSITORY}:latest
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - MONGODB_URI=${MONGODB_URI}
      - GRAFANA_CLOUD_URL=${GRAFANA_CLOUD_URL}
      - GRAFANA_API_KEY=${GRAFANA_API_KEY}
    ports:
      - "${PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  continuous-insert:
    container_name: pulse-flow-inserter
    command: node dist/scripts/continuous-insert.js
    depends_on:
      app:
        condition: service_healthy
    environment:
      - MONGODB_URI=${MONGODB_URI}
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/healthz')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
      - ./docker/exporters/mongodb_exporter:/exporters/mongodb_exporter
    ports:
      - "9090:9090"
    environment:
      - GRAFANA_CLOUD_URL=${GRAFANA_CLOUD_URL}
      - GRAFANA_API_KEY=${GRAFANA_API_KEY}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      - mongodb_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./docker/grafana:/etc/grafana
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    restart: unless-stopped

  mongodb_exporter:
    image: bitnami/mongodb-exporter:latest
    environment:
      - MONGODB_URI=${MONGODB_URI}
    ports:
      - "9216:9216"

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    container_name: jenkins
    restart: unless-stopped
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
      - JAVA_OPTS="-Xmx2g -Djava.awt.headless=true"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker

networks:
  app_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  jenkins_home: