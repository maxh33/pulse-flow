name: pulse-flow

networks:
  app_network:
    external: true
    name: pulse-flow_app_network
    driver: bridge
    labels:
      com.docker.compose.network: "app_network"
      com.docker.compose.project: "pulse-flow"

services:
  app:
    networks:
      - app_network
    container_name: pulse-flow-app
    image: ghcr.io/${GITHUB_REPOSITORY:-pulse-flow}:latest
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "127.0.0.1:3000:3000"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1'
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - MONGODB_URI=${MONGODB_URI}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    networks:
      - app_network
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    ports:
      - "127.0.0.1:9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    networks:
      - app_network
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "127.0.0.1:3001:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_ROOT_URL=http://localhost:3001
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus_data: